name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build API image
      working-directory: ./api
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/mail-api:test .

    - name: Build Backup image
      working-directory: ./backup
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/mail-backup:test .

    - name: Push API image
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/mail-api:test ${{ secrets.DOCKER_USERNAME }}/mail-api:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/mail-api:latest

    - name: Push Backup image
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/mail-backup:test ${{ secrets.DOCKER_USERNAME }}/mail-backup:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/mail-backup:latest

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.10.0

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: v1.24.0

    - name: Configure Kubernetes context
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig
        export KUBECONFIG=kubeconfig
        kubectl config use-context default

    - name: Deploy to Kubernetes
      run: |
        helm upgrade --install secure-mail-server kubernetes/helm \
          --namespace mailserver \
          --set image.api=${{ secrets.DOCKER_USERNAME }}/mail-api:latest \
          --set image.backup=${{ secrets.DOCKER_USERNAME }}/mail-backup:latest \
          --set domain=${{ secrets.DOMAIN }} \
          --set aws.region=${{ secrets.AWS_REGION }} \
          --set aws.s3Bucket=${{ secrets.S3_BUCKET }}