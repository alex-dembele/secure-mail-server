name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build API image
      working-directory: ./api
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/mail-api:latest .

    - name: Build Backup image
      working-directory: ./backup
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/mail-backup:latest .

    - name: Push API image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/mail-api:latest

    - name: Push Backup image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/mail-backup:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.10.0

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: v1.24.0

 #     - name: Configure Kubernetes context
  #     run: |
 #         echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig
 #         export KUBECONFIG=kubeconfig
 #         # Afficher les contextes disponibles pour débogage
 #         kubectl config get-contexts
 #         # Utiliser le contexte spécifié dans KUBE_CONTEXT, ou le premier disponible
 #         CONTEXT=${{ secrets.KUBE_CONTEXT }}
 #         if [ -z "$CONTEXT" ]; then
 #           CONTEXT=$(kubectl config get-contexts -o name | head -n 1)
 #         fi
 #         if [ -z "$CONTEXT" ]; then
 #           echo "Erreur : aucun contexte Kubernetes trouvé dans kubeconfig"
 #           exit 1
 #         fi
 #         kubectl config use-context $CONTEXT
 #         kubectl config current-context
        # Vérifier l'accès au cluster
 #         kubectl get nodes

  #            - name: Deploy to Kubernetes
  #             run: |
 #                 helm upgrade --install secure-mail-server kubernetes/helm \
 #                   --namespace mailserver \
 #                   --set image.api=${{ secrets.DOCKER_USERNAME }}/mail-api:latest \
 #                   --set image.backup=${{ secrets.DOCKER_USERNAME }}/mail-backup:latest \
 #                   --set domain=${{ secrets.DOMAIN }} \
 #                   --set aws.region=${{ secrets.AWS_REGION }} \
 #                   --set aws.s3Bucket=${{ secrets.S3_BUCKET }}